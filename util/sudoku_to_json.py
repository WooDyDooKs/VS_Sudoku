import re, json

"""
    sudoku_to_json.py - a simple script to convert text sudokus to json

    The input files have to be generated by a public domain generator
    called "sudoku" [1].

    Example (generates and imports 10 sudokus):

      $ sudoku -g10 -fcompact > template.txt
      $ sudoku -v template.txt -fcompact > solution.txt

      $ sudoku_to_json.py

      $ mongoimport --drop --db vs_sudoku --collection solutions --file solutions.json
      $ mongoimport --drop --db vs_sudoku --collection solutions.cells --file solutions_cells.json

    This script will create two files for each MongoDB collection, which
    can be imported via mongoimport. The format for the mongo documents is
    specified in the wiki [2].

     [1] http://packages.debian.org/squeeze/sudoku
     [2] https://github.com/WooDyDooKs/VS_Sudoku/wiki/Database

"""

template = open('template.txt')
solution = open('solution.txt')

solutions_json = open('solutions.json', 'w')
solution_cells_json = open('solutions_cells.json', 'w')

solution_id = 0

for sline in solution:
    if sline.startswith('Solution'):
        # read difficulty from solution line
        difficulty = re.search(r'\[(\w+)\]', sline).group(1)
        # check if we are reading the same puzzle
        if template.readline() != solution.readline():
            sys.stderr.write("solution and template do not match!")
            sys.exit(1)

        # create new solution
        solution_id += 1
        json.dump({
            'solution_id' : solution_id,
            'difficulty' : difficulty
        }, solutions_json)
        solution_cells_json.write('\n')

        row = 1
        continue

    # read corresponding line from template
    sline = sline.rstrip('\n')
    tline = template.readline().rstrip('\n')

    col = 1
    for sval in sline:
        tval = tline[col-1]

        json.dump({
            'solution_id' : solution_id,
            'row' : row,
            'column' : col,
            'value' : int(sval),
            'clue' : (sval == tval)
        }, solution_cells_json)
        solution_cells_json.write('\n')

        col += 1
    row += 1
    solution_cells_json.write('\n')
